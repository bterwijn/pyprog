# This is a separate section containing a few templates that we will use below.
# The & feature is built into YAML, it is not a special feature of the website.
# The section does not need to be called `templates` necessarily.

templates:
    1: &automatic
        type: pass
        subgrades:
            done: boolean
        automatic:
            done: -(correctness_score.floor)
        calculation: done
        auto_publish: true
        hide_calculated: true
    4: &autopoints
        type: float
        subgrades:
            points: integer
        automatic:
            points: correctness_score
        calculation: (points / 6.0 * 9 + 1).round(1)
        # auto_publish: true
        hide_subgrades: true
    2: &manual
        type: float
        subgrades:
            points: integer
        calculation: points
        # hide_subgrades: true
    3: &check
        type: pass
        subgrades:
            done: boolean
        calculation: done
        hide_calculated: true

# GRADES - contains definitions of how grades are structured. The names of the
# grades match the names of submits that may be defined in `submit.yml`
# elsewhere, but you can also create grades without an accompanying submit.
#
# The following properties are supported:
#
# - `type` can be `integer`, `float` or `pass`, which influences presentation
# and input
#
# - `subgrades` defines any extra numbers to be added to a grade, with their
# types `integer`, `pass`, `boolean` or `float`
#
# - note: if any subgrades are defined, teaching assistants are only allowed to
# enter those, and can't override the grade itself
#
# - `calculation` is an expression that is evaluated in the context of the
# subgrades, which means you can use any subgrade by name in that expression, as
# well as any standard Ruby objects and syntax
#
# - `automatic` is an expression that is evaluated in the context of any
# automatic grading results (as defined in `submit.yml`) - allowing the use of
# the variable `correctness_score`. It can only be used to fill in subgrades,
# but you can then use the `calculation` to transfer the value of a subgrade
# into the grade.
#
# - `hide_calculated` hides the calculated grade, only showing the entered
# subgrades (to de-emphasize grades for students)
#
# - `hide_subgrades` hides the subgrades, for example if you want to do a simple
# calculation but only show the resulting grade to students
#
# You can leave this out if grading isn't used or if each submit simply requires
# entering a final grade, no subgrades and no calculations.

grades:
    # module 1
    experimenteren:
        <<: *check
    fdr:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/10)
    weken:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/6)
    cafeine:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/9)
    vakantie:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/9)

    # module 2
    string_func:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/6)
    acid:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/6)
    orakel:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/7)
    etenstijd:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/8)
    calculator:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/9)

    # module 3
    string_module:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/9)
    string_methods:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/9)
    rechthoeken:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/9)
    wachtwoord:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/8)

    # module 4
    list_functions:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/6)
    scrabble:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/8)
    cola:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/7)
    temperatuur:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/7)

    # module 5
    rna:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/7)
    leesbaarheid:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/7)
    camelcase:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/7)

    # module 6
    schuifpuzzel:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/8)
    kalender:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/12)

    # module 7
    populatie:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/5)
    sjoelen:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/6)

    # module 8
    comprehensions:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/9)
    virus:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/17)

    # module 9
    dict_oefening:
        <<: *automatic
    set_oefening:
        <<: *automatic
    collection_functions:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/7)

    # module 10
    collection_functions2:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/8)
    indexer:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/6)

    # # module 10
    # algorithms:
    #     <<: *check
    #

    # module 11
    queue:
        <<: *automatic
        automatic:
            done: -correctness_score.floor
    cards:
        <<: *automatic
        automatic:
            done: -correctness_score.floor
    country:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/5)
    lines:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/4)

    # module 12
    hangman:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/20)
    hangman-less:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor)

    # module 13
    knapsack:
        <<: *check

    # module 14
    eca2csv:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/2)
    klimaat:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/5)

    pygame:
        <<: *check
    project:
        <<: *check

    oefententamen:
        <<: *automatic
        automatic:
            done: -(correctness_score.floor/2)
